---
type Props = {
  path: string;
  name: string;
};
const { path, name } = Astro.props;
const pathname = Astro.url.pathname.replace(import.meta.env.BASE_URL, "");
const subpath = pathname.match(/[^\/]+/g);
const isActive = path === pathname || path === `/${subpath?.[0] || ""}`;
---

<a
  href={path}
  tabindex={isActive ? -1 : undefined}
  class:list={[
    "flex rounded-xl align-middle outline-0 outline-primary transition-all focus-visible:outline-1",
    { "pointer-events-none text-secondary-900": isActive },
    {
      "text-secondary-900/70 hover:brightness-150 dark:text-secondary-50/70":
        !isActive,
    },
  ]}
>
  <span class="relative px-2 py-1">
    {name}
    {
      path === pathname ? (
        <div class="absolute inset-0 z-[-1] h-full rounded-full bg-primary" />
      ) : null
    }
  </span>
</a>
